class Solution{
  public:
    int countSubArrayProductLessThanK(const vector<int>& a, int n, long long k) {
            long long p=1;
          int i=0;
          int j=0;
          long c=0;
          
            if(n==1)
            {
                if(a[1]<k)
                  return 1;
            }
            else{
               
                     while(j<n)
                     {
                          p=p*a[j];
                         while(p>=k)
                         {
                             p=p/a[i];
                             i++;
                         }
                         
                         c=c+(j-i+1);
                         j++;
                         
                         
                   }
                   
               }
               
               return int(c);
               }
               };
               
  int main() {
    int t;
    cin >> t;
    while (t--) {
        int n, i;
        long long int k;
        cin >> n >> k;
        vector<int> arr(n);
        for (i = 0; i < n; i++) cin >> arr[i];
        Solution obj;
        cout << obj.countSubArrayProductLessThanK(arr, n, k) << endl;
    }
    return 0;
}             
               
        
    
